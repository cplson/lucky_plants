import NavBar from "@/components/NavBar";
import "./globals.css";
import { Inter, Cormorant } from "next/font/google";
import Socials from "@/components/Socials";
import Cart from "@/components/Cart";
import Link from "next/link";
import DropdownMenu from "@/components/DropdownMenu";

import AuthProviders from "./context/AuthProvider";
import SignIOBtn from "@/components/SignIOBtn";
import { QueryClient, QueryClientProvider } from "@tanstack/react-query";
import { getServerSession } from "next-auth";
import options from "./api/auth/[...nextauth]/options";

const inter = Inter({
  subsets: ["latin"],
  display: "swap",
  variable: "--font-inter",
});
const cormorant = Cormorant({
  subsets: ["latin"],
  display: "swap",
  variable: "--font-cormorant",
});

export const metadata = {
  title: "Lucky Plants",
  description: "Generated by create next app",
};

const queryClient = new QueryClient();

export default async function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  const session = await getServerSession(options);
  console.log("session in layout:", session);
  const id = session?.user?.id;
  console.log("id in layout is:", id);
  const getData = async () => {
    if (session) {
      try {
        const response = await fetch(
          `http://localhost:3000/api/getCart?id=${id}`,
          {
            method: "GET",
            headers: {
              "Content-Type": "application/json",
            },
          }
        );

        if (!response.ok) {
          throw new Error("Fetch error");
        }

        const data = await response.json();
        return data;
      } catch (error) {
        console.error(error);
        return null;
      }
    }
    return 0;
  };

  const items = await getData();
  console.log("items in cart:", items);
  return (
    <html
      lang="en"
      id="root"
      className={`${cormorant.variable} ${inter.variable}`}
    >
      <body className="flex-column justify-center p-4 sm:w-4/5 font-sans bg-gradient-to-r from-lime-100 to-green-100  max-w-7xl mx-auto">
        {/* <QueryClientProvider client={queryClient}> */}
        <AuthProviders>
          {/* TOP MENU */}
          <div className="relative">
            <div className="flex justify-between items-center invisible lg:visible absolute w-full">
              <Link href="/home" className="">
                <h1 className="font-serif text-4xl font-semibold text-green-900">
                  Lucky
                </h1>
              </Link>
              {/* NAVIGATION */}
              <div className="">
                <NavBar isMobile={false}/>
              </div>
              {/* CART */}
              <div className='flex items-center'>
                <Link href="/cart" className="mr-8">
                  <Cart cartCount={items ? items.length : 0} />
                </Link>
                <SignIOBtn />
              </div>
            </div>
            <div className="flex justify-between items-center lg:invisible absolute w-full">
              <DropdownMenu />
              <Link href="/home" className="">
                <h1 className="font-serif text-4xl font-semibold text-green-900">
                  Lucky
                </h1>
              </Link>
              <Link href="/cart" className="">
                <Cart cartCount={items.length} />
              </Link>
              {/* <SignIOBtn /> */}
            </div>
          </div>
          <div className="mt-20 w-full">{children}</div>
          <footer className="">
            <Socials />
          </footer>
        </AuthProviders>
        {/* </QueryClientProvider> */}
      </body>
    </html>
  );
}
